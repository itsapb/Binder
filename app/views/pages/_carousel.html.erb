<div class="container text-center my-3">
    <div class="row mx-auto my-auto justify-content-center">
        <div id="recipeCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner" role="listbox">
            <% books.each_with_index do |book, index| %>
                <div class="carousel-item <%= "active" if index == 0 %>">
                    <div class="col-md-3">
                          <div class="card-book" data-controller="checkbox" data-checkbox-id-value="<%= book.id %>">
                            <div class="picture">
                              <%= cl_image_tag book.photo.key, height: 280, width: 180, crop: :fill %>

                                  <%= button_tag book.currently_reading ? "undo" : "Have read", data: { action: "click->checkbox#update", checkbox_target: "button" }, class: "btn btn-success btn-dashboard" %>

                            </div>
                            <div class="text">
                              <p><%= book.title %><br>by <%= book.author %></p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                </div>
            <% end %>
            </div>
            <a class="carousel-control-prev bg-transparent w-aut" href="#recipeCarousel" role="button" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            </a>
            <a class="carousel-control-next bg-transparent w-aut" href="#recipeCarousel" role="button" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
            </a>
        </div>
    </div>
</div>

<script>
let items = document.querySelectorAll('.carousel .carousel-item')

items.forEach((el) => {
    const minPerSlide = 5
    let next = el.nextElementSibling
    for (var i=1; i<minPerSlide; i++) {
        if (!next) {
            // wrap carousel by using first child
        	next = items[0]
      	}
        let cloneChild = next.cloneNode(true)
        el.appendChild(cloneChild.children[0])
        next = next.nextElementSibling
    }
})
</script>
